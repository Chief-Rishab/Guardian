"use strict";(self.webpackChunkguardian=self.webpackChunkguardian||[]).push([[470],{3905:function(e,n,a){a.d(n,{Zo:function(){return s},kt:function(){return m}});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=t.createContext({}),p=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},s=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(a),m=i,g=d["".concat(c,".").concat(m)]||d[m]||u[m]||r;return a?t.createElement(g,o(o({ref:n},s),{},{components:a})):t.createElement(g,o({ref:n},s))}));function m(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8215:function(e,n,a){var t=a(7294);n.Z=function(e){var n=e.children,a=e.hidden,i=e.className;return t.createElement("div",{role:"tabpanel",hidden:a,className:i},n)}},5064:function(e,n,a){a.d(n,{Z:function(){return p}});var t=a(7294),i=a(9443);var r=function(){var e=(0,t.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},o=a(6010),l="tabItem_vU9c",c="tabItemActive_cw6a";var p=function(e){var n,a=e.lazy,i=e.block,p=e.defaultValue,s=e.values,u=e.groupId,d=e.className,m=t.Children.toArray(e.children),g=null!=s?s:m.map((function(e){return{value:e.props.value,label:e.props.label}})),f=null!=p?p:null==(n=m.find((function(e){return e.props.default})))?void 0:n.props.value,v=r(),y=v.tabGroupChoices,b=v.setTabGroupChoices,h=(0,t.useState)(f),k=h[0],w=h[1],T=[];if(null!=u){var N=y[u];null!=N&&N!==k&&g.some((function(e){return e.value===N}))&&w(N)}var P=function(e){var n=e.currentTarget,a=T.indexOf(n),t=g[a].value;w(t),null!=u&&(b(u,t),setTimeout((function(){var e,a,t,i,r,o,l,p;(e=n.getBoundingClientRect(),a=e.top,t=e.left,i=e.bottom,r=e.right,o=window,l=o.innerHeight,p=o.innerWidth,a>=0&&r<=p&&i<=l&&t>=0)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(c),setTimeout((function(){return n.classList.remove(c)}),2e3))}),150))},C=function(e){var n,a=null;switch(e.key){case"ArrowRight":var t=T.indexOf(e.target)+1;a=T[t]||T[0];break;case"ArrowLeft":var i=T.indexOf(e.target)-1;a=T[i]||T[T.length-1]}null==(n=a)||n.focus()};return t.createElement("div",{className:"tabs-container"},t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":i},d)},g.map((function(e){var n=e.value,a=e.label;return t.createElement("li",{role:"tab",tabIndex:k===n?0:-1,"aria-selected":k===n,className:(0,o.Z)("tabs__item",l,{"tabs__item--active":k===n}),key:n,ref:function(e){return T.push(e)},onKeyDown:C,onFocus:P,onClick:P},null!=a?a:n)}))),a?(0,t.cloneElement)(m.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):t.createElement("div",{className:"margin-vert--md"},m.map((function(e,n){return(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==k})}))))}},9443:function(e,n,a){var t=(0,a(7294).createContext)(void 0);n.Z=t},2196:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return d},default:function(){return g}});var t=a(7462),i=a(3366),r=(a(7294),a(3905)),o=a(5064),l=a(8215),c=["components"],p={},s="Managing Policies",u={unversionedId:"guides/managing-policies",id:"guides/managing-policies",isDocsHomePage:!1,title:"Managing Policies",description:"Policy controls how users or accounts can get access to a resource. Policy used by appeal to determine the approval flow, get creator's identity/profile, and decide whether it needs additional appeals. Policy is attached to a resource type in the provider config, thus a policy should be the first thing to setup before creating a provider and getting its resources.",source:"@site/docs/guides/managing-policies.mdx",sourceDirName:"guides",slug:"/guides/managing-policies",permalink:"/guardian/docs/guides/managing-policies",editUrl:"https://github.com/odpf/guardian/edit/master/docs/docs/guides/managing-policies.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"CLI",permalink:"/guardian/docs/guides/cli"},next:{title:"Managing Providers",permalink:"/guardian/docs/guides/managing-providers"}},d=[{value:"Creating Policies",id:"creating-policies",children:[]},{value:"Updating Policy",id:"updating-policy",children:[]},{value:"Listing Policies",id:"listing-policies",children:[]},{value:"Viewing Policies",id:"viewing-policies",children:[]}],m={toc:d};function g(e){var n=e.components,a=(0,i.Z)(e,c);return(0,r.kt)("wrapper",(0,t.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"managing-policies"},"Managing Policies"),(0,r.kt)("p",null,"Policy controls how users or accounts can get access to a resource. Policy used by appeal to determine the approval flow, get creator's identity/profile, and decide whether it needs additional appeals. Policy is attached to a resource type in the provider config, thus a policy should be the first thing to setup before creating a provider and getting its resources."),(0,r.kt)("h2",{id:"creating-policies"},"Creating Policies"),(0,r.kt)("p",null,"Policy has ",(0,r.kt)("inlineCode",{parentName:"p"},"version")," to ensure each appeal has a reference to an applied policy when it's created. A policy is created with an initial ",(0,r.kt)("inlineCode",{parentName:"p"},"version")," equal to ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# policy.yaml\nid: my_policy\nsteps:\n  - name: manager_approval\n    description: Manager approval for sensitive data\n    when: $appeal.resource.details.is_sensitive == true\n    strategy: manual\n    approvers:\n      - $appeal.creator.manager_email\n  - name: resource_owner_approval\n    description: Approval from resource admin/owner\n    strategy: manual\n    approvers:\n      - $appeal.resource.details.owner\n")),(0,r.kt)("p",null,"Check ",(0,r.kt)("a",{parentName:"p",href:"/guardian/docs/reference/policy"},"policy reference")," for more details on the policy configuration"),(0,r.kt)("h4",{id:"policies-can-be-created-in-the-following-ways"},"Policies can be created in the following ways:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Using ",(0,r.kt)("inlineCode",{parentName:"li"},"guardian policy create")," CLI command"),(0,r.kt)("li",{parentName:"ol"},"Calling to ",(0,r.kt)("inlineCode",{parentName:"li"},"POST /api/v1beta1/policies")," API")),(0,r.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ guardian policy create --file=policy.yaml\n"))),(0,r.kt)(l.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'$ curl --request POST \'{{HOST}}/api/v1beta1/policies\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n  "id": "my_policy",\n  "steps": [\n    {\n      "name": "manager_approval",\n      "description": "Manager approval for sensitive data",\n      "when": "$appeal.resource.details.is_sensitive == true",\n      "strategy": "manual",\n      "approvers": [\n        "$appeal.creator.manager_email"\n      ]\n    },\n    {\n      "name": "resource_owner_approval",\n      "description": "Approval from resource admin/owner",\n      "strategy": "manual",\n      "approvers": [\n        "$appeal.resource.details.owner"\n      ]\n    }\n  ]\n}\'\n')))),(0,r.kt)("h2",{id:"updating-policy"},"Updating Policy"),(0,r.kt)("p",null,"Updating a policy actually means creating a new policy with the same ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," but the ",(0,r.kt)("inlineCode",{parentName:"p"},"version")," gets incremented by ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),". Both the new and previous policies still can be used by providers."),(0,r.kt)("h4",{id:"policies-can-be-updated-in-the-following-ways"},"Policies can be updated in the following ways:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Using ",(0,r.kt)("inlineCode",{parentName:"li"},"guardian policy edit")," CLI command"),(0,r.kt)("li",{parentName:"ol"},"Calling to ",(0,r.kt)("inlineCode",{parentName:"li"},"PUT /api/v1beta1/policies/:id")," API")),(0,r.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ guardian policy edit --file=policy.yaml\n"))),(0,r.kt)(l.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'$ curl --request PUT \'{{HOST}}/api/v1beta1/policies/{{policy_id}}\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n  "steps": [\n    {\n      "name": "manager_approval",\n      "description": "Manager approval for sensitive data",\n      "when": "$appeal.resource.details.is_sensitive == true",\n      "strategy": "manual",\n      "approvers": [\n        "$appeal.creator.manager_email"\n      ]\n    },\n    {\n      "name": "resource_owner_approval",\n      "description": "Approval from resource admin/owner",\n      "strategy": "manual",\n      "approvers": [\n        "$appeal.resource.details.owner"\n      ]\n    }\n  ]\n}\'\n')))),(0,r.kt)("h2",{id:"listing-policies"},"Listing Policies"),(0,r.kt)("h4",{id:"listing-policies-can-be-done-in-the-following-ways"},"Listing policies can be done in the following ways:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Using ",(0,r.kt)("inlineCode",{parentName:"li"},"guardian policy list")," CLI command"),(0,r.kt)("li",{parentName:"ol"},"Calling to ",(0,r.kt)("inlineCode",{parentName:"li"},"GET /api/v1beta1/policies")," API")),(0,r.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ guardian policy list --output=yaml\n"))),(0,r.kt)(l.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ curl --request GET '{{HOST}}/api/v1beta1/policies'\n")))),(0,r.kt)("h2",{id:"viewing-policies"},"Viewing Policies"),(0,r.kt)("h4",{id:"viewing-a-policy-can-be-done-in-the-following-ways"},"Viewing a policy can be done in the following ways:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Using ",(0,r.kt)("inlineCode",{parentName:"li"},"guardian policy view")," CLI command"),(0,r.kt)("li",{parentName:"ol"},"Calling to ",(0,r.kt)("inlineCode",{parentName:"li"},"GET /api/v1beta1/policies/:id/versions/:version")," API")),(0,r.kt)(o.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"cli",label:"CLI",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ guardian policy view {{policy_id}} --version={{policy_version}}\n"))),(0,r.kt)(l.Z,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ curl --request GET '{{HOST}}/api/v1beta1/policies/{{policy_id}}/versions/{{policy_version}}'\n")))))}g.isMDXComponent=!0},6010:function(e,n,a){function t(e){var n,a,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(a=t(e[n]))&&(i&&(i+=" "),i+=a);else for(n in e)e[n]&&(i&&(i+=" "),i+=n);return i}function i(){for(var e,n,a=0,i="";a<arguments.length;)(e=arguments[a++])&&(n=t(e))&&(i&&(i+=" "),i+=n);return i}a.d(n,{Z:function(){return i}})}}]);