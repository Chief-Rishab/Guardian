"use strict";(self.webpackChunkguardian=self.webpackChunkguardian||[]).push([[610],{3905:function(e,n,r){r.d(n,{Zo:function(){return l},kt:function(){return g}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),u=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},l=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(r),g=a,m=d["".concat(c,".").concat(g)]||d[g]||p[g]||o;return r?t.createElement(m,i(i({ref:n},l),{},{components:r})):t.createElement(m,i({ref:n},l))}));function g(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1102:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var t=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={},c="Managing resources",u={unversionedId:"guides/managing-resources",id:"guides/managing-resources",isDocsHomePage:!1,title:"Managing resources",description:"Collecting Resources",source:"@site/docs/guides/managing-resources.md",sourceDirName:"guides",slug:"/guides/managing-resources",permalink:"/guardian/docs/guides/managing-resources",editUrl:"https://github.com/odpf/guardian/edit/master/docs/docs/guides/managing-resources.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Managing providers",permalink:"/guardian/docs/guides/managing-providers"},next:{title:"Managing appeals",permalink:"/guardian/docs/guides/managing-appeals"}},l=[{value:"Collecting Resources",id:"collecting-resources",children:[]},{value:"Adding metadata to resources",id:"adding-metadata-to-resources",children:[]}],p={toc:l};function d(e){var n=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"managing-resources"},"Managing resources"),(0,o.kt)("h2",{id:"collecting-resources"},"Collecting Resources"),(0,o.kt)("p",null,"Guardian collects resources from the providers automatically as soon as it registered. It uses cronjob to fetch the resource data continuously."),(0,o.kt)("p",null,"Example resource object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "id": 1,\n  "provider_type": "google_bigquery",\n  "provider_urn": "resource-urn",\n  "type": "table",\n  "urn": "gcp-project-id:dataset_name.table_name",\n  "name": "table_name",\n  "metadata": {\n    "owners": [\n      "owner@email.com"\n    ]\n  },\n  "labels": {\n    "key": "value"\n  }\n}\n')),(0,o.kt)("p",null,"You can see all the resources by using this endpoint:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'GET /resources\nAccept: application/json\n\nResponse:\n[\n  {\n    "id": 1,\n    "provider_type": "google_bigquery",\n    "provider_urn": "resource-urn",\n    "type": "table",\n    "urn": "gcp-project-id:dataset_name.table_name",\n    "name": "table_name",\n    "metadata": {\n      "owners": [\n        "owner@email.com"\n      ]\n    },\n    "labels": {\n      "key": "value"\n    }\n  }\n]\n')),(0,o.kt)("h2",{id:"adding-metadata-to-resources"},"Adding metadata to resources"),(0,o.kt)("p",null,"Guardian also still allows user to add their own metadata or any additional information into the resources."),(0,o.kt)("p",null,"This can be useful when we configuring the approval policy, and we need information from metadata e.g. \u201cowners\u201d as the approvers."),(0,o.kt)("p",null,"Endpoint:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'PUT /resources/:id\nContent-Type: application/json\nAccept: application/json\n\nRequest Body:\n{\n  "details": {\n    "owners": [\n      \u201cuser@email.com\u201d\n    ],\n    \u201ckey\u201d: \u201cvalue\u201d\n  }\n}\n\nResponse:\n{\n  "id": 1,\n  "provider_type": "google_bigquery",\n  "provider_urn": "resource-urn",\n  "type": "table",\n  "urn": "gcp-project-id:dataset_name.table_name",\n  "name": "table_name",\n  "metadata": {\n    "owners": [\n      "user@email.com"\n    ],\n    \u201ckey\u201d: \u201cvalue\u201d\n  }\n}\n')))}d.isMDXComponent=!0}}]);